
package Jframes;

/**
 *
 * @author sheen
 */
public class OvertimeRequestHistory extends javax.swing.JFrame {

    /**
     * Creates new form OvertimeRequestHistory
     */
    public OvertimeRequestHistory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        otTitleLabel = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        dashboardButton = new javax.swing.JButton();
        dataHistoryPanel = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        requestOvertimeButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        otTitleLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        otTitleLabel.setText("Overtime Request History");
        getContentPane().add(otTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        logoutButton.setBackground(new java.awt.Color(204, 204, 204));
        logoutButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtondashboardButton(evt);
            }
        });
        getContentPane().add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, 100, -1));

        dashboardButton.setBackground(new java.awt.Color(204, 204, 204));
        dashboardButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dashboardButton.setText("Dashboard");
        dashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButton(evt);
            }
        });
        getContentPane().add(dashboardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"May 3, 2024", "May 5, 2024", "Approved", "3 Hours", "John Doe", "May 4, 2024", null, "View, Edit, Delete."},
                {"April 22, 2024", "April 23, 2024", "Declined", "2 Hours", "Jane Smith", "April 23, 2024", "Urgent deadline, declined due to staffing issues.", "View, Edit, Delete"},
                {"April 15, 2024", "April 17, 2024", "Pending", "4 Hours", "Pending", "Pending", "Family emergency, awaiting approval.", "View, Edit, Delete."},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request Date", "Overtime Date", "Status", "Hours Requested", "Approver", "Approval Date", "Comments", "Actions"
            }
        ));
        dataHistoryPanel.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(200);
        }

        getContentPane().add(dataHistoryPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 900, 470));

        requestOvertimeButton.setBackground(new java.awt.Color(0, 206, 209));
        requestOvertimeButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        requestOvertimeButton.setForeground(new java.awt.Color(255, 255, 255));
        requestOvertimeButton.setText("Request Overtime");
        requestOvertimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestOvertimeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(requestOvertimeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Employee Profile.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 1040, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void requestOvertimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestOvertimeButtonActionPerformed
        // Create an instance of OvertimeRequest and display it
    OvertimeRequest overtimeRequest = new OvertimeRequest();
    overtimeRequest.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_requestOvertimeButtonActionPerformed

    private void logoutButtondashboardButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtondashboardButton
        // Create an instance of LoginNew and display it
    LogInNew loginNew = new LogInNew();
    loginNew.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_logoutButtondashboardButton

    private void dashboardButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButton

        // Create an instance of the Dashboard frame
        HomeDashboard dashboard = new HomeDashboard();
        // Set the visibility of the Dashboard frame to true
        dashboard.setVisible(true);
        // Close the leaveRequest Dashboard frame
        this.dispose(); // Assuming this is the Login frame

    }//GEN-LAST:event_dashboardButton

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OvertimeRequestHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OvertimeRequestHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OvertimeRequestHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OvertimeRequestHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OvertimeRequestHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JScrollPane dataHistoryPanel;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel otTitleLabel;
    private javax.swing.JButton requestOvertimeButton;
    // End of variables declaration//GEN-END:variables
}
